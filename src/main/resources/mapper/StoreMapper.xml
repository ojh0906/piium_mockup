<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="com.itso.market.mobile.dao.StoreDao">
    <select id="getStore" resultType="com.itso.market.mobile.model.STORE">
        SELECT S.* , M.NAME AS MNAME
        FROM STORE S
            LEFT JOIN MARKET M ON S.MARKET = M.MARKET
        WHERE S.STORE = #{store}
            AND S.DELYN = 'N'
    </select>

    <select id="getStoreByMember" resultType="com.itso.market.mobile.model.STORE">
        SELECT *
        FROM STORE
        WHERE MEMBER = #{member}
          AND DELYN = 'N'
    </select>

    <insert id="insertStore" parameterType="com.itso.market.mobile.model.STORE" useGeneratedKeys="true" keyProperty="store">
        INSERT INTO STORE
          (MEMBER, MARKET, SNAME, STHM, NDHM, HOLIDAYINFO, SINFO, SPHONE, ADDRESS, KAKAO, REGID, CHNID)
        VALUES
          (#{member},#{market},#{sname},#{sthm},#{ndhm},#{holidayInfo},#{sinfo},#{sphone},#{address},#{kakao},#{regId},#{chnId})
    </insert>

    <update id="updateStore">
        UPDATE STORE SET
            SNAME = #{sname},
            STHM = #{sthm},
            NDHM = #{ndhm},
            HOLIDAYINFO = #{holidayInfo},
            SINFO = #{sinfo},
            SPHONE = #{sphone},
            ADDRESS = #{address},
            KAKAO = #{kakao},
            CHNDATE = NOW(),
            CHNID = #{chnId}
        WHERE STORE = #{store}
    </update>

    <update id="deleteStore">
        UPDATE STORE SET
            DELYN = 'Y',
            CHNDATE = NOW(),
            CHNID = #{chnId}
        WHERE STORE = #{store}
    </update>

    <select id="getIdCheck" resultType="com.itso.market.mobile.model.MEMBER">
        SELECT * FROM MEMBER
        WHERE ID = #{id}
          AND DELYN = 'N'
    </select>

    <select id="getCategoriesInStore" resultType="com.itso.market.mobile.model.CATEGORY">
        SELECT * FROM CATEGORY
        WHERE CATEGORY IN (
            SELECT CATEGORY FROM SCATEGORY
            WHERE STORE = #{store} AND DELYN = 'N'
        )
    </select>

    <select id="getSCategoriesInStore" resultType="com.itso.market.mobile.model.CATEGORY">
        SELECT * FROM SCATEGORY
        WHERE STORE = #{store}
            AND DELYN = 'N'
    </select>

    <select id="getWorkdaysInStore" resultType="com.itso.market.mobile.model.WORKDAY">
        SELECT * FROM WORKDAY
        WHERE STORE = #{store}
            AND DELYN = 'N'
    </select>

    <select id="getFilesInStore" resultType="com.itso.market.mobile.model.FILE">
        SELECT * FROM SFILE
        WHERE STORE = #{store}
            AND DELYN = 'N'
    </select>

    <insert id="insertCategoriesInStore" parameterType="java.util.List">
        INSERT INTO SCATEGORY
        (
          STORE, CATEGORY, REGID, CHNID
        )
        VALUES
        <foreach collection="categories" item="category" separator=",">
            (
              #{category.store},
              #{category.category},
              #{category.regId},
              #{category.chnId}
            )
        </foreach>
    </insert>

    <insert id="insertWorkdaysInStore" parameterType="java.util.List">
        INSERT INTO WORKDAY
        (
          STORE, TYPE, DELYN, REGID, CHNID
        )
        VALUES
        <foreach collection="workdays" item="workday" separator=",">
            (
              #{workday.store},
              #{workday.type},
              #{workday.delYn},
              #{workday.regId},
              #{workday.chnId}
            )
        </foreach>
    </insert>

    <insert id="insertFilesInStore" parameterType="java.util.List">
        INSERT INTO SFILE
        (
            STORE, NAME, UUID, PATH, TYPE, REGID, CHNID
        )
        VALUES
        <foreach collection="files" item="file" separator=",">
        (
            #{file.store},
            #{file.name},
            #{file.uuid},
            #{file.path},
            #{file.type},
            #{file.regId},
            #{file.chnId}
        )
        </foreach>
    </insert>

    <update id="updateFilesInStore">
        UPDATE SFILE SET
            TYPE = 'N',
            CHNDATE = NOW(),
            CHNID = #{chnId}
        WHERE STORE = #{store}
    </update>

    <update id="updateFile">
        UPDATE SFILE SET
            TYPE = #{type},
            CHNDATE = NOW(),
            CHNID = #{chnId}
        WHERE SFILE = #{sfile}
    </update>

    <select id="getSCategory" resultType="com.itso.market.mobile.model.CATEGORY">
        SELECT *
        FROM SCATEGORY
        WHERE STORE = #{store}
            AND CATEGORY = #{category}
    </select>

    <insert id="insertSCategory">
        INSERT INTO SCATEGORY
        (
          STORE, CATEGORY, REGID, CHNID
        )
        VALUES
        (
          #{store},#{category},#{regId},#{chnId}
        )
    </insert>

    <update id="updateSCategory">
        UPDATE SCATEGORY SET
          DELYN = 'N',
          CHNDATE = NOW(),
          CHNID = #{chnId}
        WHERE STORE = #{store}
          AND CATEGORY = #{category}
    </update>

    <update id="deleteSCategory">
        UPDATE SCATEGORY SET
          DELYN = 'Y',
          CHNDATE = NOW(),
          CHNID = #{chnId}
        WHERE STORE = #{store}
    </update>

    <update id="updateWorkday">
        UPDATE WORKDAY SET
          DELYN = 'N',
          CHNDATE = NOW(),
          CHNID = #{chnId}
        WHERE STORE = #{store}
        AND TYPE = #{type}
    </update>

    <update id="deleteWorkday">
        UPDATE WORKDAY SET
          DELYN = 'Y',
          CHNDATE = NOW(),
          CHNID = #{chnId}
        WHERE STORE = #{store}
    </update>

    <select id="getRecStoreList" resultType="com.itso.market.mobile.model.STORE">
        SELECT
            A.*
            , (SELECT COUNT(*) FROM REVIEW WHERE STORE = A.STORE) AS TOT
            , (SELECT IFNULL(AVG(RATE),0) FROM REVIEW WHERE STORE = A.STORE) AS AVG
        FROM STORE A
            LEFT JOIN SCATEGORY B ON A.STORE = B.STORE
        WHERE 1=1
            AND A.DELYN = 'N'
            AND A.RECYN = 'Y'
            AND B.DELYN = 'N'
            <if test="category != null">
                AND B.CATEGORY = #{category}
            </if>
            AND A.MARKET = #{market}
        ORDER BY A.CHNDATE DESC, A.STORE DESC
        LIMIT 3
    </select>

    <select id="getPopStoreList" resultType="com.itso.market.mobile.model.STORE">
        SELECT
            A.*
            , (SELECT COUNT(*) FROM REVIEW WHERE STORE = A.STORE) AS TOT
            , (SELECT IFNULL(AVG(RATE),0) FROM REVIEW WHERE STORE = A.STORE) AS AVG
        FROM STORE A
            LEFT JOIN SCATEGORY B ON A.STORE = B.STORE
        WHERE 1=1
            AND A.DELYN = 'N'
            AND A.POPYN = 'Y'
            AND B.DELYN = 'N'
            <if test="category != null">
                AND B.CATEGORY = #{category}
            </if>
            AND A.MARKET = #{market}
        ORDER BY A.CHNDATE DESC, A.STORE DESC
        LIMIT 3
    </select>

    <select id="getCategoryList" resultType="com.itso.market.mobile.model.CATEGORY">
        SELECT *
        FROM CATEGORY
        WHERE DELYN = 'N'
    </select>

    <select id="getStoreList" resultType="com.itso.market.mobile.model.STORE">
        SELECT * FROM STORE
        WHERE DELYN = 'N'
        ORDER BY STORE DESC
    </select>

    <select id="getStoreListByCategory" resultType="com.itso.market.mobile.model.STORE">
        SELECT
            A.*
            , (SELECT COUNT(*) FROM REVIEW WHERE STORE = A.STORE) AS TOT
            , (SELECT IFNULL(AVG(RATE),0) FROM REVIEW WHERE STORE = A.STORE) AS AVG
            , M.NAME AS MNAME
        FROM STORE A
            LEFT JOIN MARKET M ON A.MARKET = M.MARKET
        WHERE 1=1
            AND A.DELYN = 'N'
            AND M.DELYN = 'N'
            AND M.MARKET = #{market}
        <if test="keyword != null">
            AND A.SNAME LIKE CONCAT('%',#{keyword},'%')
        </if>
        ORDER BY A.CHNDATE DESC, A.STORE DESC
    </select>

    <select id="getStoreSearchList" resultType="com.itso.market.mobile.model.STORE">
        SELECT DISTINCT A.*
        FROM STORE A
            LEFT JOIN SCATEGORY B ON A.STORE = B.STORE
            LEFT JOIN CATEGORY C ON B.CATEGORY = C.CATEGORY
        WHERE 1=1
            AND A.DELYN = 'N'
            AND B.DELYN = 'N'
            <if test="searchType == 'A'.toString()">
                AND (
                    C.NAME LIKE CONCAT('%',#{keyword},'%') OR
                    A.SNAME LIKE CONCAT('%',#{keyword},'%')
                )
            </if>
            <if test="searchType == 'C'.toString()">
                AND C.NAME LIKE CONCAT('%',#{keyword},'%')
            </if>
            <if test="searchType == 'S'.toString()">
                AND A.SNAME LIKE CONCAT('%',#{keyword},'%')
            </if>
        ORDER BY A.STORE
    </select>

    <update id="deleteFileInStore">
        UPDATE SFILE SET
            DELYN = 'Y',
            CHNDATE = NOW(),
            CHNID = #{chnId}
        WHERE SFILE = #{sfile}
    </update>

    <update id="updateRecStore">
        UPDATE STORE SET
            RECYN = 'Y',
            POPYN = 'N',
            CHNDATE = NOW(),
            CHNID = #{chnId}
        WHERE STORE = #{store}
    </update>

    <update id="updatePopStore">
        UPDATE STORE SET
            RECYN = 'N',
            POPYN = 'Y',
            CHNDATE = NOW(),
            CHNID = #{chnId}
        WHERE STORE = #{store}
    </update>

    <update id="updateRecPopStore">
        UPDATE STORE SET
            RECYN = 'Y',
            POPYN = 'Y',
            CHNDATE = NOW(),
            CHNID = #{chnId}
        WHERE STORE = #{store}
    </update>

    <update id="updateNoRecPopStore">
        UPDATE STORE SET
            RECYN = 'N',
            POPYN = 'N',
            CHNDATE = NOW(),
            CHNID = #{chnId}
        WHERE STORE = #{store}
    </update>

    <update id="countUpVisitor">
        UPDATE STORE SET
            VISIT = VISIT + 1,
            CHNDATE = NOW(),
            CHNID = #{chnId}
        WHERE STORE = #{store}
    </update>

    <select id="getStoreListForPaging" resultType="com.itso.market.mobile.model.STORE">
        SELECT DISTINCT A.*
        FROM STORE A
            LEFT JOIN SCATEGORY B ON A.STORE = B.STORE
            LEFT JOIN CATEGORY C ON B.CATEGORY = C.CATEGORY
        WHERE 1=1
            AND A.DELYN = 'N'
            AND B.DELYN = 'N'
        <if test="searchType == 'A'.toString()">
            AND (
                C.NAME LIKE CONCAT('%',#{keyword},'%') OR
                A.SNAME LIKE CONCAT('%',#{keyword},'%')
            )
        </if>
        <if test="searchType == 'C'.toString()">
            AND C.NAME LIKE CONCAT('%',#{keyword},'%')
        </if>
        <if test="searchType == 'S'.toString()">
            AND A.SNAME LIKE CONCAT('%',#{keyword},'%')
        </if>
        ORDER BY A.STORE
        LIMIT #{startNum}, #{num}
    </select>

    <select id="getStoreListForPagingCnt" resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT A.STORE)
        FROM STORE A
            LEFT JOIN SCATEGORY B ON A.STORE = B.STORE
            LEFT JOIN CATEGORY C ON B.CATEGORY = C.CATEGORY
        WHERE 1=1
            AND A.DELYN = 'N'
            AND B.DELYN = 'N'
        <if test="searchType == 'A'.toString()">
            AND (
                C.NAME LIKE CONCAT('%',#{keyword},'%') OR
                A.SNAME LIKE CONCAT('%',#{keyword},'%')
            )
        </if>
        <if test="searchType == 'C'.toString()">
            AND C.NAME LIKE CONCAT('%',#{keyword},'%')
        </if>
        <if test="searchType == 'S'.toString()">
            AND A.SNAME LIKE CONCAT('%',#{keyword},'%')
        </if>
        ORDER BY A.STORE
    </select>
</mapper>
